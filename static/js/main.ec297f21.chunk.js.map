{"version":3,"sources":["component/TodoList/TodoItem.js","component/TodoList/useTodos.js","component/TodoList/useInput.js","component/App/App.js","component/App/index.js","component/TodoList/useFilter.js","index.js"],"names":["Todo","styled","div","props","$isCompleted","TodoContent","EditTodoContent","input","TodoButtons","TodoButton","button","RedTodoButton","EditTodoButton","FinishEditTodoButton","TodoItem","todo","handleToggleIsCompleted","handleDeleteTodo","handleFinishEditTodo","isEditing","handleEditTodo","editTodoInput","handleEditTodoInputChange","id","content","isCompleted","value","onChange","onClick","memo","useTodos","useState","todoInput","setTodoInput","editingTodo","setEditingTodo","setEditTodoInput","errorMessage","setErrorMessage","handleInputChange","useCallback","e","target","handleInputFocus","useInput","todos","setTodos","useRef","handleAddTodo","current","map","filter","handleDeleteAllTodos","Root","Title","AddTodo","TodoInput","TodoSubmit","Filter","AllTodos","$active","UncompletedTodos","CompletedTodos","ClearAllTodos","TodoContainer","ErrorMessage","App","setFilter","handleFilterClick","innerHTML","filterTodos","useFilter","placeholder","onFocus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec297f21.chunk.js","sourcesContent":["import { memo } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Todo = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  border: 2px dashed DarkSeaGreen;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: Whitesmoke;\n  border-radius: 5px;\n  height: 60px;\n  & + & {\n    margin-top: 15px;\n  }\n\n  ${(props) =>\n    props.$isCompleted &&\n    `\n    background: Silver;\n    border-color: DimGray;\n  `}\n`;\n\nconst TodoContent = styled.div`\n  font-size: 20px;\n  color: DarkOliveGreen;\n  letter-spacing: 1.5px;\n  margin-left: 20px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ${(props) =>\n    props.$isCompleted &&\n    `\n    text-decoration: line-through;\n  `}\n`;\n\nconst EditTodoContent = styled.input`\n  font-size: 20px;\n  color: DarkOliveGreen;\n  letter-spacing: 1.5px;\n  margin-left: 20px;\n  width: 65%;\n`;\n\nconst TodoButtons = styled.div`\n  display: flex;\n`;\n\nconst TodoButton = styled.button`\n  text-decoration: none;\n  background: none;\n  color: whitesmoke;\n  border-radius: 5px;\n  background: DarkSeaGreen;\n  height: 40px;\n  margin-right: 15px;\n  width: 70px;\n  letter-spacing: 1.5px;\n  border: none;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  :hover {\n    color: DarkSlateGray;\n  }\n\n  ${(props) =>\n    props.$isCompleted &&\n    `\n    background: DimGray;\n\n    :hover {\n      color: DarkSeaGreen;\n    }\n  `}\n`;\n\nconst RedTodoButton = styled(TodoButton)`\n  background: LightCoral;\n  letter-spacing: 5px;\n\n  :hover {\n    color: Maroon;\n  }\n`;\n\nconst EditTodoButton = styled(RedTodoButton)`\n  background: Tan;\n\n  :hover {\n    color: Chocolate;\n  }\n`;\n\nconst FinishEditTodoButton = styled(EditTodoButton)`\n  background: DarkKhaki;\n`;\n\nfunction TodoItem({\n  todo,\n  handleToggleIsCompleted,\n  handleDeleteTodo,\n  handleFinishEditTodo,\n  isEditing,\n  handleEditTodo,\n  editTodoInput,\n  handleEditTodoInputChange,\n}) {\n  const { id, content, isCompleted } = todo;\n\n  return (\n    <Todo $isCompleted={isCompleted}>\n      {!isEditing && (\n        <TodoContent $isCompleted={isCompleted}>{content}</TodoContent>\n      )}\n      {isEditing && (\n        <EditTodoContent\n          value={editTodoInput}\n          onChange={handleEditTodoInputChange}\n        />\n      )}\n      <TodoButtons>\n        {!isEditing && (\n          <EditTodoButton\n            onClick={() => {\n              handleEditTodo(id, content);\n            }}\n          >\n            編輯\n          </EditTodoButton>\n        )}\n        {isEditing && (\n          <FinishEditTodoButton\n            onClick={() => {\n              handleFinishEditTodo(id, editTodoInput);\n            }}\n          >\n            完成\n          </FinishEditTodoButton>\n        )}\n        <TodoButton\n          $isCompleted={isCompleted}\n          onClick={() => {\n            handleToggleIsCompleted(id);\n          }}\n        >\n          {isCompleted ? \"未完成\" : \"已完成\"}\n        </TodoButton>\n        <RedTodoButton onClick={() => handleDeleteTodo(id)}>刪除</RedTodoButton>\n      </TodoButtons>\n    </Todo>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isCompleted: PropTypes.bool,\n  }),\n  editTodoInput: PropTypes.string,\n  isEditing: PropTypes.bool,\n  handleToggleIsCompleted: PropTypes.func,\n  handleDeleteTodo: PropTypes.func,\n  handleEditTodo: PropTypes.func,\n  handleEditTodoInputChange: PropTypes.func,\n  handleFinishEditTodo: PropTypes.func,\n};\n\nexport default memo(TodoItem);\n","import { useState, useRef, useCallback } from \"react\";\nimport useInput from \"./useInput\";\n\nexport default function useTodos() {\n  const {\n    todoInput,\n    setTodoInput,\n    setEditingTodo,\n    setErrorMessage,\n    errorMessage,\n    editingTodo,\n    editTodoInput,\n    handleInputChange,\n    handleInputFocus,\n    handleEditTodo,\n    handleEditTodoInputChange,\n  } = useInput();\n  const [todos, setTodos] = useState([]);\n  const id = useRef(1);\n\n  const handleAddTodo = useCallback(() => {\n    if (todoInput === \"\") {\n      setErrorMessage(\"請輸入待辦事項！\");\n      return;\n    }\n    setTodos([\n      ...todos,\n      {\n        id: id.current,\n        content: todoInput,\n        isCompleted: false,\n      },\n    ]);\n\n    id.current++;\n    setTodoInput(\"\");\n  }, [todoInput, setTodoInput, setErrorMessage, todos]);\n\n  const handleFinishEditTodo = useCallback(\n    (id, content) => {\n      if (content === \"\") {\n        return;\n      }\n\n      setTodos(\n        todos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              content: content,\n            };\n          }\n          return todo;\n        })\n      );\n      setEditingTodo(0);\n    },\n    [todos, setEditingTodo]\n  );\n\n  const handleToggleIsCompleted = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              isCompleted: !todo.isCompleted,\n            };\n          }\n          return todo;\n        })\n      );\n    },\n    [todos]\n  );\n\n  const handleDeleteTodo = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    [todos]\n  );\n\n  const handleDeleteAllTodos = useCallback(() => {\n    setTodos([]);\n  }, []);\n\n  return {\n    todos,\n    todoInput,\n    setTodos,\n    handleAddTodo,\n    handleFinishEditTodo,\n    handleToggleIsCompleted,\n    handleDeleteTodo,\n    errorMessage,\n    editingTodo,\n    editTodoInput,\n    handleInputChange,\n    handleInputFocus,\n    handleEditTodo,\n    handleEditTodoInputChange,\n    handleDeleteAllTodos,\n  };\n}\n","import { useState, useCallback } from \"react\";\n\nexport default function useInput() {\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [editingTodo, setEditingTodo] = useState(0);\n  const [editTodoInput, setEditTodoInput] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleInputChange = useCallback((e) => {\n    setTodoInput(e.target.value);\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setErrorMessage(null);\n  }, []);\n\n  const handleEditTodo = useCallback((id, content) => {\n    setEditingTodo(id);\n    setEditTodoInput(content);\n  }, []);\n\n  const handleEditTodoInputChange = useCallback((e) => {\n    setEditTodoInput(e.target.value);\n  }, []);\n\n  return {\n    todoInput,\n    errorMessage,\n    editingTodo,\n    editTodoInput,\n    setTodoInput,\n    setErrorMessage,\n    setEditingTodo,\n    handleInputChange,\n    handleInputFocus,\n    handleEditTodo,\n    handleEditTodoInputChange,\n  };\n}\n","import styled from \"styled-components\";\nimport TodoItem from \"../TodoList/TodoItem\";\nimport useTodos from \"../TodoList/useTodos\";\nimport useFilter from \"../TodoList/useFilter\";\n\nconst Root = styled.div`\n  width: 960px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.div`\n  font-size: 48px;\n  color: IndianRed;\n  justify-content: center;\n  margin: 0 auto;\n  text-align: center;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nconst AddTodo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 40px 30px 30px 30px;\n  flex-wrap: wrap;\n`;\n\nconst TodoInput = styled.input`\n  width: 75%;\n  margin-left: 30px;\n  font-size: 18px;\n  letter-spacing: 1px;\n\n  ::placeholder {\n    color: Silver;\n  }\n`;\n\nconst TodoSubmit = styled.button`\n  text-decoration: none;\n  font-size: 18px;\n  letter-spacing: 5px;\n  justify-content: center;\n  text-align: center;\n  width: 12%;\n  color: DarkOliveGreen;\n  border: none;\n  background: Whitesmoke;\n  border-radius: 5px;\n  height: 40px;\n  cursor: pointer;\n  margin-right: 20px;\n\n  :hover {\n    background: DarkOliveGreen;\n    color: Whitesmoke;\n  }\n`;\n\nconst Filter = styled.div`\n  display: flex;\n  margin: 30px 0px 16px 60px;\n`;\n\nconst AllTodos = styled.button`\n  color: IndianRed;\n  background: none;\n  border: none;\n  margin-right: 20px;\n  font-size: 16px;\n  height: 50px;\n  width: 80px;\n  border-radius: 5px;\n  letter-spacing: 3px;\n  cursor: pointer;\n  font-weight: bold;\n\n  :hover {\n    background: DarkOliveGreen;\n    color: White;\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: DarkOliveGreen;\n    color: white;\n  `}\n`;\n\nconst UncompletedTodos = styled(AllTodos)`\n  background: none;\n  color: DarkSeaGreen;\n\n  :hover {\n    color: white;\n    background: DarkSeaGreen;\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n    color: white;\n    background: DarkSeaGreen;\n  `}\n`;\n\nconst CompletedTodos = styled(UncompletedTodos)`\n  color: DimGray;\n\n  :hover {\n    background: DimGray;\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: DimGray;\n    color: white;\n  `}\n`;\n\nconst ClearAllTodos = styled(UncompletedTodos)`\n  color: LightCoral;\n\n  :hover {\n    background: LightCoral;\n  }\n`;\n\nconst TodoContainer = styled.div`\n  margin: 0 auto;\n`;\n\nconst ErrorMessage = styled.div`\n  color: LightCoral;\n  margin-left: 30px;\n  margin-top: 10px;\n`;\n\nfunction App() {\n  const {\n    todos,\n    handleAddTodo,\n    todoInput,\n    errorMessage,\n    handleInputChange,\n    handleInputFocus,\n    handleToggleIsCompleted,\n    handleDeleteTodo,\n    handleFinishEditTodo,\n    editingTodo,\n    handleEditTodo,\n    editTodoInput,\n    handleEditTodoInputChange,\n    handleDeleteAllTodos,\n  } = useTodos();\n  const { filter, handleFilterClick, filterTodos } = useFilter();\n\n  return (\n    <Root>\n      <Title>- To-do List -</Title>\n      <AddTodo>\n        <TodoInput\n          onChange={handleInputChange}\n          placeholder=\"To-do\"\n          value={todoInput}\n          onFocus={handleInputFocus}\n        />\n        <TodoSubmit onClick={handleAddTodo}>新增</TodoSubmit>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </AddTodo>\n      <Filter onClick={handleFilterClick}>\n        <AllTodos $active={filter === \"All\"}>全部</AllTodos>\n        <UncompletedTodos $active={filter === \"Uncompleted\"}>\n          未完成\n        </UncompletedTodos>\n        <CompletedTodos $active={filter === \"Completed\"}>已完成</CompletedTodos>\n        <ClearAllTodos onClick={handleDeleteAllTodos}>清空</ClearAllTodos>\n      </Filter>\n      <TodoContainer>\n        {filterTodos(todos).map((todo) => {\n          return (\n            <TodoItem\n              todo={todo}\n              key={todo.id}\n              handleToggleIsCompleted={handleToggleIsCompleted}\n              handleDeleteTodo={handleDeleteTodo}\n              handleFinishEditTodo={handleFinishEditTodo}\n              isEditing={editingTodo === todo.id}\n              handleEditTodo={handleEditTodo}\n              editTodoInput={editingTodo === todo.id ? editTodoInput : \"\"}\n              handleEditTodoInputChange={handleEditTodoInputChange}\n            />\n          );\n        })}\n      </TodoContainer>\n    </Root>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\nexport default App;\n","import { useState } from \"react\";\n\nexport default function useFilter() {\n  const [filter, setFilter] = useState(\"All\");\n\n  const handleFilterClick = (e) => {\n    switch (e.target.innerHTML) {\n      case \"全部\":\n        setFilter(\"All\");\n        break;\n      case \"未完成\":\n        setFilter(\"Uncompleted\");\n        break;\n      case \"已完成\":\n        setFilter(\"Completed\");\n        break;\n      // no default\n    }\n  };\n\n  const filterTodos = (todos) => {\n    switch (filter) {\n      case \"All\":\n        return todos;\n      case \"Uncompleted\":\n        return todos.filter((todo) => !todo.isCompleted);\n      case \"Completed\":\n        return todos.filter((todo) => todo.isCompleted);\n      // no default\n    }\n  };\n\n  return {\n    filter,\n    handleFilterClick,\n    filterTodos,\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}